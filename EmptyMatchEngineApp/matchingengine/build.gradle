apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'

apply plugin: 'com.jfrog.artifactory'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// Stop build if the proto definitions git repo is missing (via absolute path):
def edgeProtoGitRepo = "$projectDir/../../../edge-proto"
// Sanity check:
if (!new File(edgeProtoGitRepo).exists() ) {
    throw new GradleException("Invalid repo. Please git clone the shared edge-proto.git repository ($edgeProtoGitRepo) at the same directory level as this git repo.")
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 4
        versionName "2.1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            proto {
                srcDirs "${edgeProtoGitRepo}/dme"
                srcDirs "${edgeProtoGitRepo}/third_party/googleapis"
            }
            java {
            }
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation project(":mel")
    //implementation 'com.mobiledgex:mel:1.0.11'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    protobuf 'com.google.protobuf:protobuf-java:3.0.2' // FIXME: Timestamp, for lite version: old lib: https://github.com/google/protobuf/issues/1889
    implementation 'javax.annotation:javax.annotation-api:1.2'

    // For Google Services
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'

    // For JWT validation
    implementation 'com.auth0.android:jwtdecode:2.0.0'
}

artifactoryPublish.dependsOn('build')
publishing {
    publications {
        aar(MavenPublication) {
            groupId = "com.mobiledgex"
            artifactId = project.getName()
            version = android.defaultConfig.versionName
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
        }
    }
}

artifactoryPublish {
    publications(publishing.publications.aar)
}
